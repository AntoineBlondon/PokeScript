
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AS AT BOOL BREAK BUG CASE COLON COMMA DARK DEFAULT DIV DIVEQ DRAGON ELECTRIC ELSE EQ EQUALS EXCLAMATION FAIRY FALSE FIGHTING FIRE FLOAT FLOAT_LITERAL FLYING FOR GE GHOST GRASS GROUND GT HAT ICE IDENTIFIER IF IMPORT IN INT INTEGER_LITERAL LARROW LBRACE LBRACKET LE LIST LPAREN LT MINUS MINUSEQ MUL MULEQ NE NORMAL PIPE PLUS PLUSEQ POISON PSYCHIC RARROW RBRACE RBRACKET RETURN ROCK RPAREN SEMI STEEL STR STRING_LITERAL SWITCH TRUE UNTYPED VOID WATER WHILEprogram : statementsstatements : statement SEMI statements\n                  | statement SEMI\n                  | statement statements\n                  | statementfunction_declaration : type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE EQUALS expression\n                            | type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACEparameters : type_specifier IDENTIFIER COMMA parameters\n                  | type_specifier IDENTIFIER\n                  | expression  : IDENTIFIER LPAREN arguments RPAREN\n                   | IDENTIFIER PIPE IDENTIFIER LPAREN arguments RPARENarguments : expression COMMA arguments\n                 | expression\n                 | return_statement : RETURN expression SEMIstatement : declaration\n                 | assignment\n                 | function_declaration\n                 | expression\n                 | list_operation\n                 | return_statementstatement : IMPORT expression AS IDENTIFIER\n                 | IMPORT expressionstatement : IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE\n                 | IF LPAREN expression RPAREN LBRACE statements RBRACEstatement : FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRACE statements RBRACE\n                 | FOR LPAREN type_specifier IDENTIFIER IN expression RPAREN LBRACE statements RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE statements RBRACEstatement : WHILE LPAREN expression RPAREN COLON expression LBRACE statements RBRACEstatement : SWITCH LPAREN expression RPAREN LBRACE case_statements RBRACEcase_statements : CASE expression COLON statements case_statements\n                       | DEFAULT COLON statements\n                       | statement : BREAK SEMIexpression : LBRACKET elements RBRACKET\n                  | LBRACKET RBRACKETelements : expression COMMA elements\n                | expressionexpression : expression LBRACKET expression RBRACKETlist_operation : IDENTIFIER LBRACKET expression RBRACKET EQUALS expression\n                      | IDENTIFIER LBRACKET expression RBRACKET LARROW expression\n                      | IDENTIFIER MINUSEQ LBRACKET expression RBRACKETexpression : IDENTIFIER AT expressiondeclaration : type_specifier IDENTIFIER EQUALS expressiontype_specifier : INT\n                     | FLOAT\n                     | BOOL\n                     | STR\n                     | UNTYPED\n                     | VOID\n                     | LIST LT type_specifier GT\n                     | type_specifier LT poke_type GTpoke_type : FIRE\n                 | WATER\n                 | GRASS\n                 | ELECTRIC\n                 | ICE\n                 | PSYCHIC\n                 | GROUND\n                 | FIGHTING\n                 | POISON\n                 | GHOST\n                 | DRAGON\n                 | DARK\n                 | NORMAL\n                 | BUG\n                 | FLYING\n                 | ROCK\n                 | STEEL\n                 | FAIRYassignment : IDENTIFIER EQUALS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression MUL expression\n                  | expression DIV expressionexpression : INTEGER_LITERALexpression : MINUS INTEGER_LITERALexpression : FLOAT_LITERALexpression : MINUS FLOAT_LITERALexpression : TRUE\n                  | FALSEexpression : STRING_LITERALexpression : IDENTIFIERexpression : expression GT expression\n                  | expression LT expression\n                  | expression EQ expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression NE expressionexpression : EXCLAMATION expression\n                  | expression AMPERSAND expression\n                  | expression PIPE expression\n                  | expression HAT expressionexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'IMPORT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[10,10,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,10,-24,-84,10,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,10,10,-12,-41,-42,10,10,-26,-29,10,-31,10,10,-7,10,10,10,-30,-28,-6,-25,-27,]),'IF':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[12,12,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,12,-24,-84,12,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,12,12,-12,-41,-42,12,12,-26,-29,12,-31,12,12,-7,12,12,12,-30,-28,-6,-25,-27,]),'FOR':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[14,14,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,14,-24,-84,14,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,14,14,-12,-41,-42,14,14,-26,-29,14,-31,14,14,-7,14,14,14,-30,-28,-6,-25,-27,]),'WHILE':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[16,16,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,16,-24,-84,16,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,16,16,-12,-41,-42,16,16,-26,-29,16,-31,16,16,-7,16,16,16,-30,-28,-6,-25,-27,]),'SWITCH':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[17,17,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,17,-24,-84,17,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,17,17,-12,-41,-42,17,17,-26,-29,17,-31,17,17,-7,17,17,17,-30,-28,-6,-25,-27,]),'BREAK':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[18,18,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,18,-24,-84,18,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,18,18,-12,-41,-42,18,18,-26,-29,18,-31,18,18,-7,18,18,18,-30,-28,-6,-25,-27,]),'IDENTIFIER':([0,3,4,5,6,7,8,9,10,11,13,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,99,101,102,125,126,127,129,130,131,132,133,137,139,140,142,146,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[11,11,-17,-18,-19,-20,-21,-22,52,-84,52,62,52,-77,-79,-81,-82,-83,52,52,-46,-47,-48,-49,-50,-51,11,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-24,-84,52,52,94,52,52,52,11,52,52,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,130,-72,-44,52,-95,138,52,-36,52,-16,-40,-23,-11,52,52,52,-45,155,-53,-52,52,52,-43,11,52,11,52,-12,-41,-42,11,11,52,-26,-29,11,-31,11,11,-7,11,11,11,52,-30,-28,-6,-25,-27,]),'LBRACKET':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,64,65,66,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,97,98,99,102,123,124,125,126,127,129,130,131,132,133,135,137,139,149,150,151,152,153,154,157,158,160,161,162,164,165,167,169,171,173,178,179,180,181,182,185,186,188,190,191,193,194,198,199,201,202,],[19,19,-17,-18,-19,37,-21,-22,19,57,19,19,-77,-79,-81,-82,-83,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,37,-84,19,19,19,19,97,19,37,19,19,19,-35,-37,37,-78,-80,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,19,37,-95,19,37,37,-36,19,-16,-40,-23,-11,19,19,37,19,37,19,19,-43,19,37,19,19,19,-12,37,37,19,37,19,37,19,-26,-29,19,-31,37,19,19,-7,19,19,19,19,-30,-28,37,-25,-27,]),'INTEGER_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[21,21,-17,-18,-19,-20,-21,-22,21,-84,21,21,70,-77,-79,-81,-82,-83,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-24,-84,21,21,21,21,21,21,21,21,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,21,-95,21,-36,21,-16,-40,-23,-11,21,21,21,-45,21,21,-43,21,21,21,21,-12,-41,-42,21,21,21,-26,-29,21,-31,21,21,-7,21,21,21,21,-30,-28,-6,-25,-27,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,60,61,64,65,66,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,97,98,99,102,123,124,125,126,127,129,130,131,132,133,135,137,139,149,150,151,152,153,154,157,158,160,161,162,164,165,167,169,171,173,178,179,180,181,182,185,186,188,190,191,193,194,198,199,201,202,],[20,20,-17,-18,-19,39,-21,-22,20,-84,20,20,-77,-79,-81,-82,-83,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,39,-84,20,20,20,20,20,39,20,20,20,-35,-37,39,-78,-80,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,20,39,-95,20,39,39,-36,20,-16,-40,-23,-11,20,20,39,20,39,20,20,-43,20,39,20,20,20,-12,39,39,20,39,20,39,20,-26,-29,20,-31,39,20,20,-7,20,20,20,20,-30,-28,39,-25,-27,]),'FLOAT_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,20,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[22,22,-17,-18,-19,-20,-21,-22,22,-84,22,22,71,-77,-79,-81,-82,-83,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-24,-84,22,22,22,22,22,22,22,22,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,22,-95,22,-36,22,-16,-40,-23,-11,22,22,22,-45,22,22,-43,22,22,22,22,-12,-41,-42,22,22,22,-26,-29,22,-31,22,22,-7,22,22,22,22,-30,-28,-6,-25,-27,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[23,23,-17,-18,-19,-20,-21,-22,23,-84,23,23,-77,-79,-81,-82,-83,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-24,-84,23,23,23,23,23,23,23,23,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,23,-95,23,-36,23,-16,-40,-23,-11,23,23,23,-45,23,23,-43,23,23,23,23,-12,-41,-42,23,23,23,-26,-29,23,-31,23,23,-7,23,23,23,23,-30,-28,-6,-25,-27,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[24,24,-17,-18,-19,-20,-21,-22,24,-84,24,24,-77,-79,-81,-82,-83,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-24,-84,24,24,24,24,24,24,24,24,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,24,-95,24,-36,24,-16,-40,-23,-11,24,24,24,-45,24,24,-43,24,24,24,24,-12,-41,-42,24,24,24,-26,-29,24,-31,24,24,-7,24,24,24,24,-30,-28,-6,-25,-27,]),'STRING_LITERAL':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[25,25,-17,-18,-19,-20,-21,-22,25,-84,25,25,-77,-79,-81,-82,-83,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-24,-84,25,25,25,25,25,25,25,25,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,25,-95,25,-36,25,-16,-40,-23,-11,25,25,25,-45,25,25,-43,25,25,25,25,-12,-41,-42,25,25,25,-26,-29,25,-31,25,25,-7,25,25,25,25,-30,-28,-6,-25,-27,]),'EXCLAMATION':([0,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,97,99,102,125,126,127,129,130,131,132,133,137,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[26,26,-17,-18,-19,-20,-21,-22,26,-84,26,26,-77,-79,-81,-82,-83,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-24,-84,26,26,26,26,26,26,26,26,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,26,-95,26,-36,26,-16,-40,-23,-11,26,26,26,-45,26,26,-43,26,26,26,26,-12,-41,-42,26,26,26,-26,-29,26,-31,26,26,-7,26,26,26,26,-30,-28,-6,-25,-27,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,19,21,22,23,24,25,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,59,61,62,64,65,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,94,95,97,99,102,125,126,127,129,130,131,132,133,137,138,139,149,150,151,152,154,157,158,160,161,162,164,167,171,173,178,179,180,182,185,186,188,190,191,193,194,198,199,201,202,],[13,13,-17,-18,-19,-20,-21,-22,13,54,59,13,61,64,65,13,-77,-79,-81,-82,-83,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-24,54,13,13,13,13,13,13,103,13,13,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,133,-44,13,-95,13,-36,13,-16,-40,-23,-11,13,13,13,103,-45,13,13,-43,13,13,13,13,-12,-41,-42,13,13,13,-26,-29,13,-31,13,13,-7,13,13,13,13,-30,-28,-6,-25,-27,]),'RETURN':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,152,157,160,161,162,164,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[27,27,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,27,-24,-84,27,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,27,27,-12,-41,-42,27,27,-26,-29,27,-31,27,27,-7,27,27,27,-30,-28,-6,-25,-27,]),'INT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[28,28,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,28,-24,-84,28,-35,-37,-78,-80,-91,28,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,28,-36,-16,-40,-23,-11,-45,-43,28,28,-12,-41,-42,28,28,28,-26,-29,28,-31,28,28,-7,28,28,28,-30,-28,-6,-25,-27,]),'FLOAT':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[29,29,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,29,-24,-84,29,-35,-37,-78,-80,-91,29,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,29,-36,-16,-40,-23,-11,-45,-43,29,29,-12,-41,-42,29,29,29,-26,-29,29,-31,29,29,-7,29,29,29,-30,-28,-6,-25,-27,]),'BOOL':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[30,30,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,30,-24,-84,30,-35,-37,-78,-80,-91,30,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,30,-36,-16,-40,-23,-11,-45,-43,30,30,-12,-41,-42,30,30,30,-26,-29,30,-31,30,30,-7,30,30,30,-30,-28,-6,-25,-27,]),'STR':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[31,31,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,31,-24,-84,31,-35,-37,-78,-80,-91,31,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,31,-36,-16,-40,-23,-11,-45,-43,31,31,-12,-41,-42,31,31,31,-26,-29,31,-31,31,31,-7,31,31,31,-30,-28,-6,-25,-27,]),'UNTYPED':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[32,32,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,32,-24,-84,32,-35,-37,-78,-80,-91,32,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,32,-36,-16,-40,-23,-11,-45,-43,32,32,-12,-41,-42,32,32,32,-26,-29,32,-31,32,32,-7,32,32,32,-30,-28,-6,-25,-27,]),'VOID':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[33,33,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,33,-24,-84,33,-35,-37,-78,-80,-91,33,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,33,-36,-16,-40,-23,-11,-45,-43,33,33,-12,-41,-42,33,33,33,-26,-29,33,-31,33,33,-7,33,33,33,-30,-28,-6,-25,-27,]),'LIST':([0,3,4,5,6,7,8,9,11,21,22,23,24,25,35,51,52,61,66,68,70,71,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,103,125,127,129,130,131,139,151,152,157,160,161,162,164,166,167,173,178,179,180,182,185,186,188,190,191,194,198,199,201,202,],[34,34,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,34,-24,-84,34,-35,-37,-78,-80,-91,34,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,34,-36,-16,-40,-23,-11,-45,-43,34,34,-12,-41,-42,34,34,34,-26,-29,34,-31,34,34,-7,34,34,34,-30,-28,-6,-25,-27,]),'$end':([1,2,3,4,5,6,7,8,9,11,21,22,23,24,25,35,36,51,52,66,68,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,160,161,162,173,178,180,186,194,198,199,201,202,],[0,-1,-5,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,-3,-4,-24,-84,-35,-37,-78,-80,-91,-2,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,-12,-41,-42,-26,-29,-31,-7,-30,-28,-6,-25,-27,]),'SEMI':([3,4,5,6,7,8,9,11,18,21,22,23,24,25,51,52,66,68,70,71,72,73,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,100,125,127,129,130,131,139,151,153,160,161,162,173,178,180,186,194,198,199,201,202,],[35,-17,-18,-19,-20,-21,-22,-84,66,-77,-79,-81,-82,-83,-24,-84,-35,-37,-78,-80,-91,127,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,137,-36,-16,-40,-23,-11,-45,-43,164,-12,-41,-42,-26,-29,-31,-7,-30,-28,-6,-25,-27,]),'RBRACE':([3,4,5,6,7,8,9,11,21,22,23,24,25,35,36,51,52,66,68,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,159,160,161,162,163,168,170,173,177,178,180,186,187,189,192,194,195,196,197,198,199,200,201,202,],[-5,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,-3,-4,-24,-84,-35,-37,-78,-80,-91,-2,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,-34,-12,-41,-42,173,178,180,-26,186,-29,-31,-7,194,-33,198,-30,-34,201,202,-28,-6,-32,-25,-27,]),'CASE':([3,4,5,6,7,8,9,11,21,22,23,24,25,35,36,51,52,66,68,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,159,160,161,162,173,178,180,186,194,195,198,199,201,202,],[-5,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,-3,-4,-24,-84,-35,-37,-78,-80,-91,-2,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,171,-12,-41,-42,-26,-29,-31,-7,-30,171,-28,-6,-25,-27,]),'DEFAULT':([3,4,5,6,7,8,9,11,21,22,23,24,25,35,36,51,52,66,68,70,71,72,75,77,78,79,80,81,82,83,84,85,86,87,88,89,91,95,99,125,127,129,130,131,139,151,159,160,161,162,173,178,180,186,194,195,198,199,201,202,],[-5,-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,-3,-4,-24,-84,-35,-37,-78,-80,-91,-2,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,-44,-95,-36,-16,-40,-23,-11,-45,-43,172,-12,-41,-42,-26,-29,-31,-7,-30,172,-28,-6,-25,-27,]),'RPAREN':([4,5,6,7,8,9,11,21,22,23,24,25,51,52,54,60,66,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,103,123,124,125,127,129,130,131,132,133,139,141,147,148,151,155,160,161,162,165,166,173,174,176,178,180,186,194,198,199,201,202,],[-17,-18,-19,-20,-21,-22,-84,-77,-79,-81,-82,-83,-24,-84,-15,99,-35,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-72,131,-14,-44,136,-95,-10,143,144,-36,-16,-40,-23,-11,-15,-15,-45,156,-13,160,-43,-9,-12,-41,-42,175,-10,-26,184,-8,-29,-31,-7,-30,-28,-6,-25,-27,]),'PLUS':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[38,-84,-77,-79,-81,-82,-83,38,-84,38,-37,38,-78,-80,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-95,38,38,-36,-40,-11,38,38,38,-12,38,38,38,38,38,38,]),'MUL':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[40,-84,-77,-79,-81,-82,-83,40,-84,40,-37,40,-78,-80,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-95,40,40,-36,-40,-11,40,40,40,-12,40,40,40,40,40,40,]),'DIV':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[41,-84,-77,-79,-81,-82,-83,41,-84,41,-37,41,-78,-80,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-95,41,41,-36,-40,-11,41,41,41,-12,41,41,41,41,41,41,]),'GT':([7,11,21,22,23,24,25,28,29,30,31,32,33,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,131,135,139,142,146,153,160,161,162,165,169,181,199,],[42,-84,-77,-79,-81,-82,-83,-46,-47,-48,-49,-50,-51,42,-84,42,-37,42,-78,-80,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-95,142,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,42,42,-36,146,-40,-11,42,42,-53,-52,42,-12,42,42,42,42,42,42,]),'LT':([7,11,15,21,22,23,24,25,28,29,30,31,32,33,34,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,101,123,124,125,128,129,131,135,139,140,142,146,153,160,161,162,165,169,181,199,],[43,-84,63,-77,-79,-81,-82,-83,-46,-47,-48,-49,-50,-51,74,43,-84,43,-37,43,-78,-80,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-95,63,43,43,-36,63,-40,-11,43,43,63,-53,-52,43,-12,43,43,43,43,43,43,]),'EQ':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[44,-84,-77,-79,-81,-82,-83,44,-84,44,-37,44,-78,-80,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-95,44,44,-36,-40,-11,44,44,44,-12,44,44,44,44,44,44,]),'GE':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[45,-84,-77,-79,-81,-82,-83,45,-84,45,-37,45,-78,-80,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-95,45,45,-36,-40,-11,45,45,45,-12,45,45,45,45,45,45,]),'LE':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[46,-84,-77,-79,-81,-82,-83,46,-84,46,-37,46,-78,-80,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-95,46,46,-36,-40,-11,46,46,46,-12,46,46,46,46,46,46,]),'NE':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[47,-84,-77,-79,-81,-82,-83,47,-84,47,-37,47,-78,-80,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-95,47,47,-36,-40,-11,47,47,47,-12,47,47,47,47,47,47,]),'AMPERSAND':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[48,-84,-77,-79,-81,-82,-83,48,-84,48,-37,48,-78,-80,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-95,48,48,-36,-40,-11,48,48,48,-12,48,48,48,48,48,48,]),'PIPE':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[49,55,-77,-79,-81,-82,-83,49,55,49,-37,49,-78,-80,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-95,49,49,-36,-40,-11,49,49,49,-12,49,49,49,49,49,49,]),'HAT':([7,11,21,22,23,24,25,51,52,60,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,99,123,124,125,129,131,135,139,153,160,161,162,165,169,181,199,],[50,-84,-77,-79,-81,-82,-83,50,-84,50,-37,50,-78,-80,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-95,50,50,-36,-40,-11,50,50,50,-12,50,50,50,50,50,50,]),'EQUALS':([11,62,134,138,186,],[53,102,149,102,193,]),'AT':([11,52,],[56,56,]),'MINUSEQ':([11,],[58,]),'RBRACKET':([19,21,22,23,24,25,52,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,99,125,129,131,135,145,160,],[68,-77,-79,-81,-82,-83,-84,125,-37,-39,-78,-80,-91,129,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-44,134,-95,-36,-40,-11,151,-38,-12,]),'AS':([21,22,23,24,25,51,52,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,95,99,125,129,131,160,],[-77,-79,-81,-82,-83,90,-84,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-44,-95,-36,-40,-11,-12,]),'COMMA':([21,22,23,24,25,52,68,69,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,125,129,131,155,160,],[-77,-79,-81,-82,-83,-84,-37,126,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,132,-44,-95,-36,-40,-11,166,-12,]),'LBRACE':([21,22,23,24,25,52,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,95,99,125,129,131,136,143,144,156,160,169,175,183,184,],[-77,-79,-81,-82,-83,-84,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-44,-95,-36,-40,-11,152,157,159,167,-12,179,185,190,191,]),'COLON':([21,22,23,24,25,52,68,70,71,72,77,78,79,80,81,82,83,84,85,86,87,88,89,95,99,125,129,131,143,160,172,181,],[-77,-79,-81,-82,-83,-84,-37,-78,-80,-91,-73,-74,-75,-76,-85,-86,-87,-88,-89,-90,-92,-93,-94,-44,-95,-36,-40,-11,158,-12,182,188,]),'FIRE':([63,],[105,]),'WATER':([63,],[106,]),'GRASS':([63,],[107,]),'ELECTRIC':([63,],[108,]),'ICE':([63,],[109,]),'PSYCHIC':([63,],[110,]),'GROUND':([63,],[111,]),'FIGHTING':([63,],[112,]),'POISON':([63,],[113,]),'GHOST':([63,],[114,]),'DRAGON':([63,],[115,]),'DARK':([63,],[116,]),'NORMAL':([63,],[117,]),'BUG':([63,],[118,]),'FLYING':([63,],[119,]),'ROCK':([63,],[120,]),'STEEL':([63,],[121,]),'FAIRY':([63,],[122,]),'LARROW':([134,],[150,]),'IN':([138,],[154,]),'ELSE':([173,],[183,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,35,152,157,167,179,182,185,188,190,191,],[2,36,75,163,168,177,187,189,192,195,196,197,]),'statement':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[3,3,3,100,3,3,174,3,3,3,3,3,3,3,]),'declaration':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'function_declaration':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,3,10,13,19,26,27,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,56,57,59,61,64,65,97,102,126,132,133,137,149,150,152,154,157,158,164,167,171,179,182,185,188,190,191,193,],[7,7,51,60,69,72,73,7,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,93,95,96,98,7,123,124,135,139,69,93,93,153,161,162,7,165,7,169,7,7,181,7,7,7,7,7,7,199,]),'list_operation':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'return_statement':([0,3,35,61,152,157,164,167,179,182,185,188,190,191,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'type_specifier':([0,3,35,61,74,103,152,157,164,166,167,179,182,185,188,190,191,],[15,15,15,101,128,140,15,15,15,140,15,15,15,15,15,15,15,]),'elements':([19,126,],[67,145,]),'arguments':([54,132,133,],[92,147,148,]),'poke_type':([63,],[104,]),'parameters':([103,166,],[141,176,]),'case_statements':([159,195,],[170,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','pparser.py',16),
  ('statements -> statement SEMI statements','statements',3,'p_statements','pparser.py',21),
  ('statements -> statement SEMI','statements',2,'p_statements','pparser.py',22),
  ('statements -> statement statements','statements',2,'p_statements','pparser.py',23),
  ('statements -> statement','statements',1,'p_statements','pparser.py',24),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE EQUALS expression','function_declaration',10,'p_function_declaration','pparser.py',38),
  ('function_declaration -> type_specifier IDENTIFIER LPAREN parameters RPAREN LBRACE statements RBRACE','function_declaration',8,'p_function_declaration','pparser.py',39),
  ('parameters -> type_specifier IDENTIFIER COMMA parameters','parameters',4,'p_parameters','pparser.py',49),
  ('parameters -> type_specifier IDENTIFIER','parameters',2,'p_parameters','pparser.py',50),
  ('parameters -> <empty>','parameters',0,'p_parameters','pparser.py',51),
  ('expression -> IDENTIFIER LPAREN arguments RPAREN','expression',4,'p_expression_function_call','pparser.py',61),
  ('expression -> IDENTIFIER PIPE IDENTIFIER LPAREN arguments RPAREN','expression',6,'p_expression_function_call','pparser.py',62),
  ('arguments -> expression COMMA arguments','arguments',3,'p_arguments','pparser.py',70),
  ('arguments -> expression','arguments',1,'p_arguments','pparser.py',71),
  ('arguments -> <empty>','arguments',0,'p_arguments','pparser.py',72),
  ('return_statement -> RETURN expression SEMI','return_statement',3,'p_return_statement','pparser.py',81),
  ('statement -> declaration','statement',1,'p_statement','pparser.py',86),
  ('statement -> assignment','statement',1,'p_statement','pparser.py',87),
  ('statement -> function_declaration','statement',1,'p_statement','pparser.py',88),
  ('statement -> expression','statement',1,'p_statement','pparser.py',89),
  ('statement -> list_operation','statement',1,'p_statement','pparser.py',90),
  ('statement -> return_statement','statement',1,'p_statement','pparser.py',91),
  ('statement -> IMPORT expression AS IDENTIFIER','statement',4,'p_import_statement','pparser.py',96),
  ('statement -> IMPORT expression','statement',2,'p_import_statement','pparser.py',97),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE','statement',11,'p_if_else_statement','pparser.py',105),
  ('statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_if_else_statement','pparser.py',106),
  ('statement -> FOR LPAREN statement SEMI expression SEMI statement RPAREN LBRACE statements RBRACE','statement',11,'p_for_loop','pparser.py',113),
  ('statement -> FOR LPAREN type_specifier IDENTIFIER IN expression RPAREN LBRACE statements RBRACE','statement',10,'p_for_loop','pparser.py',114),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statements RBRACE','statement',7,'p_while_loop','pparser.py',122),
  ('statement -> WHILE LPAREN expression RPAREN COLON expression LBRACE statements RBRACE','statement',9,'p_do_while_loop','pparser.py',127),
  ('statement -> SWITCH LPAREN expression RPAREN LBRACE case_statements RBRACE','statement',7,'p_switch_statement','pparser.py',132),
  ('case_statements -> CASE expression COLON statements case_statements','case_statements',5,'p_case_statements','pparser.py',136),
  ('case_statements -> DEFAULT COLON statements','case_statements',3,'p_case_statements','pparser.py',137),
  ('case_statements -> <empty>','case_statements',0,'p_case_statements','pparser.py',138),
  ('statement -> BREAK SEMI','statement',2,'p_break_statement','pparser.py',147),
  ('expression -> LBRACKET elements RBRACKET','expression',3,'p_list_literal','pparser.py',151),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_list_literal','pparser.py',152),
  ('elements -> expression COMMA elements','elements',3,'p_elements','pparser.py',159),
  ('elements -> expression','elements',1,'p_elements','pparser.py',160),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_index','pparser.py',167),
  ('list_operation -> IDENTIFIER LBRACKET expression RBRACKET EQUALS expression','list_operation',6,'p_list_operation','pparser.py',171),
  ('list_operation -> IDENTIFIER LBRACKET expression RBRACKET LARROW expression','list_operation',6,'p_list_operation','pparser.py',172),
  ('list_operation -> IDENTIFIER MINUSEQ LBRACKET expression RBRACKET','list_operation',5,'p_list_operation','pparser.py',173),
  ('expression -> IDENTIFIER AT expression','expression',3,'p_list_find','pparser.py',182),
  ('declaration -> type_specifier IDENTIFIER EQUALS expression','declaration',4,'p_declaration','pparser.py',186),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','pparser.py',190),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','pparser.py',191),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','pparser.py',192),
  ('type_specifier -> STR','type_specifier',1,'p_type_specifier','pparser.py',193),
  ('type_specifier -> UNTYPED','type_specifier',1,'p_type_specifier','pparser.py',194),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','pparser.py',195),
  ('type_specifier -> LIST LT type_specifier GT','type_specifier',4,'p_type_specifier','pparser.py',196),
  ('type_specifier -> type_specifier LT poke_type GT','type_specifier',4,'p_type_specifier','pparser.py',197),
  ('poke_type -> FIRE','poke_type',1,'p_poketype','pparser.py',206),
  ('poke_type -> WATER','poke_type',1,'p_poketype','pparser.py',207),
  ('poke_type -> GRASS','poke_type',1,'p_poketype','pparser.py',208),
  ('poke_type -> ELECTRIC','poke_type',1,'p_poketype','pparser.py',209),
  ('poke_type -> ICE','poke_type',1,'p_poketype','pparser.py',210),
  ('poke_type -> PSYCHIC','poke_type',1,'p_poketype','pparser.py',211),
  ('poke_type -> GROUND','poke_type',1,'p_poketype','pparser.py',212),
  ('poke_type -> FIGHTING','poke_type',1,'p_poketype','pparser.py',213),
  ('poke_type -> POISON','poke_type',1,'p_poketype','pparser.py',214),
  ('poke_type -> GHOST','poke_type',1,'p_poketype','pparser.py',215),
  ('poke_type -> DRAGON','poke_type',1,'p_poketype','pparser.py',216),
  ('poke_type -> DARK','poke_type',1,'p_poketype','pparser.py',217),
  ('poke_type -> NORMAL','poke_type',1,'p_poketype','pparser.py',218),
  ('poke_type -> BUG','poke_type',1,'p_poketype','pparser.py',219),
  ('poke_type -> FLYING','poke_type',1,'p_poketype','pparser.py',220),
  ('poke_type -> ROCK','poke_type',1,'p_poketype','pparser.py',221),
  ('poke_type -> STEEL','poke_type',1,'p_poketype','pparser.py',222),
  ('poke_type -> FAIRY','poke_type',1,'p_poketype','pparser.py',223),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','pparser.py',230),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','pparser.py',238),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','pparser.py',239),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','pparser.py',240),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','pparser.py',241),
  ('expression -> INTEGER_LITERAL','expression',1,'p_expression_number','pparser.py',245),
  ('expression -> MINUS INTEGER_LITERAL','expression',2,'p_expression_negative_number','pparser.py',250),
  ('expression -> FLOAT_LITERAL','expression',1,'p_expression_float','pparser.py',254),
  ('expression -> MINUS FLOAT_LITERAL','expression',2,'p_expression_negative_float','pparser.py',258),
  ('expression -> TRUE','expression',1,'p_expression_boolean','pparser.py',262),
  ('expression -> FALSE','expression',1,'p_expression_boolean','pparser.py',263),
  ('expression -> STRING_LITERAL','expression',1,'p_expression_string','pparser.py',267),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','pparser.py',272),
  ('expression -> expression GT expression','expression',3,'p_expression_compare','pparser.py',276),
  ('expression -> expression LT expression','expression',3,'p_expression_compare','pparser.py',277),
  ('expression -> expression EQ expression','expression',3,'p_expression_compare','pparser.py',278),
  ('expression -> expression GE expression','expression',3,'p_expression_compare','pparser.py',279),
  ('expression -> expression LE expression','expression',3,'p_expression_compare','pparser.py',280),
  ('expression -> expression NE expression','expression',3,'p_expression_compare','pparser.py',281),
  ('expression -> EXCLAMATION expression','expression',2,'p_logical_operations','pparser.py',285),
  ('expression -> expression AMPERSAND expression','expression',3,'p_logical_operations','pparser.py',286),
  ('expression -> expression PIPE expression','expression',3,'p_logical_operations','pparser.py',287),
  ('expression -> expression HAT expression','expression',3,'p_logical_operations','pparser.py',288),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','pparser.py',295),
]
